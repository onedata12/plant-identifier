{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khjgd\\\\Desktop\\\\Maker\\\\plant\\\\plant-identifier\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [result, setResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const API_KEY = process.env.REACT_APP_GEMINI_API_KEY;\n\n  // 이미지 선택 핸들러\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    setSelectedImage(file);\n  };\n\n  // 폼 제출 핸들러\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!selectedImage) {\n      alert('이미지를 선택해주세요');\n      return;\n    }\n    if (!API_KEY) {\n      alert('API 키가 설정되지 않았습니다');\n      return;\n    }\n    setIsLoading(true);\n    setResult('이미지 분석 중...');\n    try {\n      // 이미지를 Base64로 변환\n      const reader = new FileReader();\n      reader.readAsDataURL(selectedImage);\n      reader.onloadend = async () => {\n        try {\n          var _data$candidates$, _data$candidates$$con, _data$candidates$$con2, _data$candidates$$con3;\n          const base64Image = reader.result.split(',')[1];\n          const requestBody = {\n            contents: [{\n              parts: [{\n                text: \"이 식물이나 과일이 무엇인지 한국어로 설명해주세요.\"\n              }, {\n                inline_data: {\n                  mime_type: selectedImage.type,\n                  data: base64Image\n                }\n              }]\n            }]\n          };\n          console.log('API Key exists:', !!API_KEY);\n          console.log('Request Body:', requestBody);\n          const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-pro-vision:generateContent?key=${API_KEY}`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(requestBody)\n          });\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const data = await response.json();\n          console.log('API Response:', data);\n          if (data.candidates && (_data$candidates$ = data.candidates[0]) !== null && _data$candidates$ !== void 0 && (_data$candidates$$con = _data$candidates$.content) !== null && _data$candidates$$con !== void 0 && (_data$candidates$$con2 = _data$candidates$$con.parts) !== null && _data$candidates$$con2 !== void 0 && (_data$candidates$$con3 = _data$candidates$$con2[0]) !== null && _data$candidates$$con3 !== void 0 && _data$candidates$$con3.text) {\n            setResult(data.candidates[0].content.parts[0].text);\n          } else {\n            setResult('API 응답 형식이 올바르지 않습니다.');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          setResult(`이미지 처리 중 오류가 발생했습니다: ${error.message}`);\n        }\n      };\n    } catch (error) {\n      console.error('Error:', error);\n      setResult('이미지 처리 중 오류가 발생했습니다.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC2DD\\uBB3C \\uC2DD\\uBCC4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload,\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? '분석 중...' : '분석하기'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC120\\uD0DD\\uB41C \\uC774\\uBBF8\\uC9C0:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(selectedImage),\n        alt: \"\\uC120\\uD0DD\\uB41C \\uC2DD\\uBB3C\",\n        style: {\n          maxWidth: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uBD84\\uC11D \\uACB0\\uACFC:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K+IZkA7pO+ViWSnZ0SAz19j37x4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","selectedImage","setSelectedImage","result","setResult","isLoading","setIsLoading","API_KEY","process","env","REACT_APP_GEMINI_API_KEY","handleImageUpload","event","file","target","files","handleSubmit","preventDefault","alert","reader","FileReader","readAsDataURL","onloadend","_data$candidates$","_data$candidates$$con","_data$candidates$$con2","_data$candidates$$con3","base64Image","split","requestBody","contents","parts","text","inline_data","mime_type","type","data","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","json","candidates","content","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","accept","onChange","disabled","src","URL","createObjectURL","alt","style","maxWidth","_c","$RefreshReg$"],"sources":["C:/Users/khjgd/Desktop/Maker/plant/plant-identifier/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  const API_KEY = process.env.REACT_APP_GEMINI_API_KEY;\r\n\r\n  // 이미지 선택 핸들러\r\n  const handleImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedImage(file);\r\n  };\r\n\r\n  // 폼 제출 핸들러\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    if (!selectedImage) {\r\n      alert('이미지를 선택해주세요');\r\n      return;\r\n    }\r\n    \r\n    if (!API_KEY) {\r\n      alert('API 키가 설정되지 않았습니다');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setResult('이미지 분석 중...');\r\n\r\n    try {\r\n      // 이미지를 Base64로 변환\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(selectedImage);\r\n      \r\n      reader.onloadend = async () => {\r\n        try {\r\n          const base64Image = reader.result.split(',')[1];\r\n          \r\n          const requestBody = {\r\n            contents: [{\r\n              parts: [\r\n                { text: \"이 식물이나 과일이 무엇인지 한국어로 설명해주세요.\" },\r\n                {\r\n                  inline_data: {\r\n                    mime_type: selectedImage.type,\r\n                    data: base64Image\r\n                  }\r\n                }\r\n              ]\r\n            }]\r\n          };\r\n\r\n          console.log('API Key exists:', !!API_KEY);\r\n          console.log('Request Body:', requestBody);\r\n\r\n          const response = await fetch(\r\n            `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro-vision:generateContent?key=${API_KEY}`,\r\n            {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify(requestBody)\r\n            }\r\n          );\r\n\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n\r\n          const data = await response.json();\r\n          console.log('API Response:', data);\r\n\r\n          if (data.candidates && data.candidates[0]?.content?.parts?.[0]?.text) {\r\n            setResult(data.candidates[0].content.parts[0].text);\r\n          } else {\r\n            setResult('API 응답 형식이 올바르지 않습니다.');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n          setResult(`이미지 처리 중 오류가 발생했습니다: ${error.message}`);\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setResult('이미지 처리 중 오류가 발생했습니다.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>식물 식별기</h1>\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageUpload}\r\n          disabled={isLoading}\r\n        />\r\n        <button type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? '분석 중...' : '분석하기'}\r\n        </button>\r\n      </form>\r\n\r\n      {selectedImage && (\r\n        <div className=\"preview\">\r\n          <h3>선택된 이미지:</h3>\r\n          <img\r\n            src={URL.createObjectURL(selectedImage)}\r\n            alt=\"선택된 식물\"\r\n            style={{ maxWidth: '300px' }}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {result && (\r\n        <div className=\"result\">\r\n          <h3>분석 결과:</h3>\r\n          <p>{result}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}