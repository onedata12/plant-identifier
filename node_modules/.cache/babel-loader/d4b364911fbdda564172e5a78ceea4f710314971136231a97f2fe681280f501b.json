{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khjgd\\\\Desktop\\\\Maker\\\\plant\\\\plant-identifier\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [result, setResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [plantInfo, setPlantInfo] = useState(null);\n  const [error, setError] = useState(null);\n  const API_KEY = process.env.REACT_APP_GEMINI_API_KEY;\n  useEffect(() => {\n    if (selectedImage) {\n      handleSubmit();\n    }\n  }, [selectedImage]);\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedImage(file);\n      setResult(null);\n      setError(null);\n    }\n  };\n  const parsePlantInfo = text => {\n    try {\n      // 기본 정보 구조 초기화\n      const plantData = {\n        name: \"정보를 찾을 수 없습니다\",\n        scientificName: \"정보를 찾을 수 없습니다\",\n        difficulty: \"초급\",\n        waterFrequency: \"정보를 찾을 수 없습니다\",\n        temperature: \"정보를 찾을 수 없습니다\",\n        humidity: \"정보를 찾을 수 없습니다\",\n        features: [],\n        precautions: []\n      };\n\n      // 텍스트에서 정보 추출\n      const lines = text.split('\\n');\n      let currentSection = '';\n      lines.forEach(line => {\n        line = line.trim();\n\n        // 이름 추출\n        if (line.includes('이름:') || line.includes('식물:')) {\n          plantData.name = line.split(':')[1].trim();\n        }\n        // 학명 추출\n        else if (line.includes('학명:')) {\n          plantData.scientificName = line.split(':')[1].trim();\n        }\n        // 물주기 추출\n        else if (line.toLowerCase().includes('물주기:')) {\n          plantData.waterFrequency = line.split(':')[1].trim();\n        }\n        // 온도 추출\n        else if (line.includes('온도:')) {\n          plantData.temperature = line.split(':')[1].trim();\n        }\n        // 습도 추출\n        else if (line.includes('습도:')) {\n          plantData.humidity = line.split(':')[1].trim();\n        }\n        // 특징 섹션 시작\n        else if (line.includes('특징:')) {\n          currentSection = 'features';\n        }\n        // 주의사항 섹션 시작\n        else if (line.includes('주의사항:')) {\n          currentSection = 'precautions';\n        }\n        // 특징이나 주의사항 항목 추가\n        else if (line && currentSection) {\n          if (line.startsWith('-') || line.startsWith('•')) {\n            line = line.substring(1).trim();\n          }\n          if (line && currentSection === 'features') {\n            plantData.features.push(line);\n          } else if (line && currentSection === 'precautions') {\n            plantData.precautions.push(line);\n          }\n        }\n      });\n      return plantData;\n    } catch (error) {\n      console.error('Parsing error:', error);\n      throw new Error('식물 정보 파싱 중 오류가 발생했습니다.');\n    }\n  };\n  const handleSubmit = async e => {\n    if (e) e.preventDefault();\n    if (!selectedImage) {\n      setError('이미지를 선택해주세요');\n      return;\n    }\n    if (!API_KEY) {\n      setError('API 키가 설정되지 않았습니다');\n      return;\n    }\n    setIsLoading(true);\n    setResult('이미지 분석 중...');\n    setError(null);\n    try {\n      const reader = new FileReader();\n      reader.readAsDataURL(selectedImage);\n      reader.onloadend = async () => {\n        try {\n          const base64Image = reader.result.split(',')[1];\n          const requestBody = {\n            contents: [{\n              parts: [{\n                text: `이 식물의 정보를 다음 형식으로 알려주세요:\n이름:\n학명:\n물주기:\n온도:\n습도:\n특징:\n- 특징1\n- 특징2\n주의사항:\n- 주의사항1\n- 주의사항2`\n              }, {\n                inlineData: {\n                  mimeType: \"image/jpeg\",\n                  data: base64Image\n                }\n              }]\n            }]\n          };\n          const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${API_KEY}`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(requestBody)\n          });\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const data = await response.json();\n          if (data.candidates && data.candidates[0] && data.candidates[0].content) {\n            const text = data.candidates[0].content.parts[0].text;\n            console.log('API Response:', text);\n            const plantData = parsePlantInfo(text);\n            setPlantInfo(plantData);\n            setResult(null);\n          } else {\n            throw new Error('API 응답 형식이 올바르지 않습니다.');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          setError(`이미지 처리 중 오류가 발생했습니다: ${error.message}`);\n          setPlantInfo(null);\n        }\n      };\n    } catch (error) {\n      console.error('Error:', error);\n      setError('이미지 처리 중 오류가 발생했습니다.');\n      setPlantInfo(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const PlantCard = ({\n    name,\n    scientificName,\n    waterFrequency,\n    temperature,\n    humidity,\n    difficulty,\n    features,\n    precautions\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\uD83C\\uDF3F \", name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '14px',\n            color: '#888'\n          },\n          children: [\"(\", difficulty, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), scientificName !== \"정보를 찾을 수 없습니다\" && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: scientificName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tags\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag related\",\n          children: \"\\uAD00\\uC5FD\\uC2DD\\uBB3C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag level\",\n          children: \"\\uCD08\\uAE09\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-section\",\n        children: [waterFrequency !== \"정보를 찾을 수 없습니다\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDCA7 \\uBB3C\\uC8FC\\uAE30: \", waterFrequency]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 50\n        }, this), temperature !== \"정보를 찾을 수 없습니다\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83C\\uDF21\\uFE0F \\uC801\\uC815 \\uC628\\uB3C4: \", temperature]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 47\n        }, this), humidity !== \"정보를 찾을 수 없습니다\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDCA8 \\uC2B5\\uB3C4: \", humidity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), features.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"features-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD2B9\\uC9D5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: features.map((feature, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"\\u2728 \", feature]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), precautions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"precautions-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC8FC\\uC758\\uC0AC\\uD56D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: precautions.map((precaution, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"\\u26A0\\uFE0F \", precaution]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Plant Identifier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload,\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        className: \"submit-button\",\n        children: isLoading ? '분석 중...' : '분석하기'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC120\\uD0DD\\uB41C \\uC774\\uBBF8\\uC9C0:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(selectedImage),\n        alt: \"\\uC120\\uD0DD\\uB41C \\uC2DD\\uBB3C\",\n        style: {\n          maxWidth: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC2DD\\uBB3C\\uC744 \\uBD84\\uC11D\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this), plantInfo && !error && /*#__PURE__*/_jsxDEV(PlantCard, {\n      ...plantInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aI1EgcAInF5Uz3ZyoWT5wpyVNzQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","selectedImage","setSelectedImage","result","setResult","isLoading","setIsLoading","plantInfo","setPlantInfo","error","setError","API_KEY","process","env","REACT_APP_GEMINI_API_KEY","handleSubmit","handleImageUpload","event","file","target","files","parsePlantInfo","text","plantData","name","scientificName","difficulty","waterFrequency","temperature","humidity","features","precautions","lines","split","currentSection","forEach","line","trim","includes","toLowerCase","startsWith","substring","push","console","Error","e","preventDefault","reader","FileReader","readAsDataURL","onloadend","base64Image","requestBody","contents","parts","inlineData","mimeType","data","response","fetch","method","headers","body","JSON","stringify","ok","status","json","candidates","content","log","message","PlantCard","className","children","style","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","length","map","feature","index","precaution","onSubmit","type","accept","onChange","disabled","src","URL","createObjectURL","alt","maxWidth","_c","$RefreshReg$"],"sources":["C:/Users/khjgd/Desktop/Maker/plant/plant-identifier/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [plantInfo, setPlantInfo] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  \r\n  const API_KEY = process.env.REACT_APP_GEMINI_API_KEY;\r\n\r\n  useEffect(() => {\r\n    if (selectedImage) {\r\n      handleSubmit();\r\n    }\r\n  }, [selectedImage]);\r\n\r\n  const handleImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setSelectedImage(file);\r\n      setResult(null);\r\n      setError(null);\r\n    }\r\n  };\r\n\r\n  const parsePlantInfo = (text) => {\r\n    try {\r\n      // 기본 정보 구조 초기화\r\n      const plantData = {\r\n        name: \"정보를 찾을 수 없습니다\",\r\n        scientificName: \"정보를 찾을 수 없습니다\",\r\n        difficulty: \"초급\",\r\n        waterFrequency: \"정보를 찾을 수 없습니다\",\r\n        temperature: \"정보를 찾을 수 없습니다\",\r\n        humidity: \"정보를 찾을 수 없습니다\",\r\n        features: [],\r\n        precautions: []\r\n      };\r\n\r\n      // 텍스트에서 정보 추출\r\n      const lines = text.split('\\n');\r\n      let currentSection = '';\r\n\r\n      lines.forEach(line => {\r\n        line = line.trim();\r\n        \r\n        // 이름 추출\r\n        if (line.includes('이름:') || line.includes('식물:')) {\r\n          plantData.name = line.split(':')[1].trim();\r\n        }\r\n        // 학명 추출\r\n        else if (line.includes('학명:')) {\r\n          plantData.scientificName = line.split(':')[1].trim();\r\n        }\r\n        // 물주기 추출\r\n        else if (line.toLowerCase().includes('물주기:')) {\r\n          plantData.waterFrequency = line.split(':')[1].trim();\r\n        }\r\n        // 온도 추출\r\n        else if (line.includes('온도:')) {\r\n          plantData.temperature = line.split(':')[1].trim();\r\n        }\r\n        // 습도 추출\r\n        else if (line.includes('습도:')) {\r\n          plantData.humidity = line.split(':')[1].trim();\r\n        }\r\n        // 특징 섹션 시작\r\n        else if (line.includes('특징:')) {\r\n          currentSection = 'features';\r\n        }\r\n        // 주의사항 섹션 시작\r\n        else if (line.includes('주의사항:')) {\r\n          currentSection = 'precautions';\r\n        }\r\n        // 특징이나 주의사항 항목 추가\r\n        else if (line && currentSection) {\r\n          if (line.startsWith('-') || line.startsWith('•')) {\r\n            line = line.substring(1).trim();\r\n          }\r\n          if (line && currentSection === 'features') {\r\n            plantData.features.push(line);\r\n          } else if (line && currentSection === 'precautions') {\r\n            plantData.precautions.push(line);\r\n          }\r\n        }\r\n      });\r\n\r\n      return plantData;\r\n    } catch (error) {\r\n      console.error('Parsing error:', error);\r\n      throw new Error('식물 정보 파싱 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    if (e) e.preventDefault();\r\n    \r\n    if (!selectedImage) {\r\n      setError('이미지를 선택해주세요');\r\n      return;\r\n    }\r\n    \r\n    if (!API_KEY) {\r\n      setError('API 키가 설정되지 않았습니다');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setResult('이미지 분석 중...');\r\n    setError(null);\r\n\r\n    try {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(selectedImage);\r\n      \r\n      reader.onloadend = async () => {\r\n        try {\r\n          const base64Image = reader.result.split(',')[1];\r\n          \r\n          const requestBody = {\r\n            contents: [{\r\n              parts: [\r\n                {\r\n                  text: `이 식물의 정보를 다음 형식으로 알려주세요:\r\n이름:\r\n학명:\r\n물주기:\r\n온도:\r\n습도:\r\n특징:\r\n- 특징1\r\n- 특징2\r\n주의사항:\r\n- 주의사항1\r\n- 주의사항2`\r\n                },\r\n                {\r\n                  inlineData: {\r\n                    mimeType: \"image/jpeg\",\r\n                    data: base64Image\r\n                  }\r\n                }\r\n              ]\r\n            }]\r\n          };\r\n\r\n          const response = await fetch(\r\n            `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${API_KEY}`,\r\n            {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify(requestBody)\r\n            }\r\n          );\r\n\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n\r\n          const data = await response.json();\r\n          \r\n          if (data.candidates && data.candidates[0] && data.candidates[0].content) {\r\n            const text = data.candidates[0].content.parts[0].text;\r\n            console.log('API Response:', text);\r\n            \r\n            const plantData = parsePlantInfo(text);\r\n            setPlantInfo(plantData);\r\n            setResult(null);\r\n          } else {\r\n            throw new Error('API 응답 형식이 올바르지 않습니다.');\r\n          }\r\n          \r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n          setError(`이미지 처리 중 오류가 발생했습니다: ${error.message}`);\r\n          setPlantInfo(null);\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError('이미지 처리 중 오류가 발생했습니다.');\r\n      setPlantInfo(null);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const PlantCard = ({ name, scientificName, waterFrequency, temperature, humidity, difficulty, features, precautions }) => {\r\n    return (\r\n      <div className=\"card\">\r\n        <h2>🌿 {name} <span style={{ fontSize: '14px', color: '#888' }}>({difficulty})</span></h2>\r\n        {scientificName !== \"정보를 찾을 수 없습니다\" && <h3>{scientificName}</h3>}\r\n        <div className=\"tags\">\r\n          <span className=\"tag related\">관엽식물</span>\r\n          <span className=\"tag level\">초급</span>\r\n        </div>\r\n        <div className=\"info-section\">\r\n          {waterFrequency !== \"정보를 찾을 수 없습니다\" && <p>💧 물주기: {waterFrequency}</p>}\r\n          {temperature !== \"정보를 찾을 수 없습니다\" && <p>🌡️ 적정 온도: {temperature}</p>}\r\n          {humidity !== \"정보를 찾을 수 없습니다\" && <p>💨 습도: {humidity}</p>}\r\n        </div>\r\n        {features.length > 0 && (\r\n          <div className=\"features-section\">\r\n            <h4>특징</h4>\r\n            <ul>\r\n              {features.map((feature, index) => (\r\n                <li key={index}>✨ {feature}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n        {precautions.length > 0 && (\r\n          <div className=\"precautions-section\">\r\n            <h4>주의사항</h4>\r\n            <ul>\r\n              {precautions.map((precaution, index) => (\r\n                <li key={index}>⚠️ {precaution}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Plant Identifier</h1>\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageUpload}\r\n          disabled={isLoading}\r\n        />\r\n        <button type=\"submit\" disabled={isLoading} className=\"submit-button\">\r\n          {isLoading ? '분석 중...' : '분석하기'}\r\n        </button>\r\n      </form>\r\n\r\n      {selectedImage && (\r\n        <div className=\"preview\">\r\n          <h3>선택된 이미지:</h3>\r\n          <img\r\n            src={URL.createObjectURL(selectedImage)}\r\n            alt=\"선택된 식물\"\r\n            style={{ maxWidth: '300px' }}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {error && (\r\n        <div className=\"error\">\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {isLoading && (\r\n        <div className=\"loading\">\r\n          <p>식물을 분석하고 있습니다...</p>\r\n        </div>\r\n      )}\r\n\r\n      {plantInfo && !error && <PlantCard {...plantInfo} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}